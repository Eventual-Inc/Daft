events {
    worker_connections 1024;
}

http {
    include mime.types;
    sendfile on;

    server {
        listen 8080;
        listen [::]:8080;

        resolver 127.0.0.11;
        autoindex off;

        server_name _;
        server_tokens off;

        root /app/static;
        gzip_static on;

        location /400.html {
            return 400 "<b>Sike it's a hardcoded 400!</b>";
        }
        location /401.html {
            return 401 "<b>Sike it's a hardcoded 401!</b>";
        }
        location /403.html {
            return 403 "<b>Sike it's a hardcoded 403!</b>";
        }
        location /404.html {
            return 404 "<b>Sike it's a hardcoded 404!</b>";
        }
        location /429.html {
            return 429 "<b>Sike it's a hardcoded 429!</b>";
        }
        location /500.html {
            return 500 "<b>Sike it's a hardcoded 500!</b>";
        }
        location /503.html {
            return 503 "<b>Sike it's a hardcoded 503!</b>";
        }

        # Simulate S3 endpoint for non-retryable errors to ensure that
        # the native parquet reader throws nice errors
        #
        # The following error codes are considered retryable:
        # https://github.com/aws/aws-sdk-cpp/blob/8a9550f1db04b33b3606602ba181d68377f763df/src/aws-cpp-sdk-core/include/aws/core/http/HttpResponse.h#L113-L131
        # 500/503/429/509/408/419/440/504/598/599
        location /s3-bucket-name/non-retryable-404-failure.parquet {
            return 404 '<?xml version="1.0" encoding="UTF-8"?>
<Error>
  <Code>FooErrorCode</Code>
  <Message>This is a mock error message</Message>
  <Resource>/s3-bucket-name/non-retryable-failure.html</Resource>
  <RequestId>4442587FB7D0A2F9</RequestId>
</Error>';
        }
    }
}
