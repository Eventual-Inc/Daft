name: Run property based tests with Hypothesis

on:
  schedule:
  - cron: 0 20 * * *
  workflow_dispatch:

env:
  DAFT_ANALYTICS_ENABLED: '0'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9']
        daft_runner: [ray, native]
    steps:
    - uses: actions/checkout@v4
    - uses: moonrepo/setup-rust@v1
      with:
        cache: false
    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ runner.os }}-build
        cache-all-crates: 'true'

    - name: Setup Python ${{ matrix.python-version  }} and UV
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"

    - name: Setup Virtual Env
      run: |
        uv venv --seed .venv
        echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync --no-install-project --all-extras --all-groups
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Build dashboard with Bun
      working-directory: ./src/daft-dashboard/frontend
      run: |
        bun install
        bun run build
    - name: Build Rust Library
      run: |
        source activate
        maturin develop --uv --release

    - name: Run Hypothesis property based tests
      run: source activate; pytest tests/property_based_testing -m 'hypothesis' --hypothesis-seed=0
      env:
        DAFT_RUNNER: ${{ matrix.daft_runner }}
        HYPOTHESIS_MAX_EXAMPLES: 10000

    - name: Send Slack notification on failure
      uses: slackapi/slack-github-action@v2.0.0
      if: ${{ failure() && (github.ref == 'refs/heads/main') }}
      with:
        payload: |
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":rotating_light: [NIGHTLY] Property-Based Tests <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow> *FAILED* :rotating_light:"
                }
              }
            ]
          }
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
