# This workflow checks Daft against various versions of Ray nightly

name: Check Ray version compatibility

on:
  schedule:
  - cron: 59 23 * * *
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
        ray-version: [2.1.0, 2.0.0, 1.13.0, 1.12.0, 1.11.0, 1.10.0]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      id: poetry-cache
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies with Ray version ${{ matrix.ray-version }}
      run: |
        # Install Poetry and deps
        python -m pip install poetry
        poetry add ray@${{ matrix.ray-version }}
        poetry install --all-extras --with dev,test -vvv
    - name: Build Extensions Locally
      run: |
        poetry run build_inplace
    - name: Clone TPCH SQlite repository
      uses: actions/checkout@v2
      with:
        repository: lovasoa/TPCH-sqlite
        path: data/tpch-sqlite
        submodules: recursive
    - name: Build TPCH data
      working-directory: data/tpch-sqlite
      run: SCALE_FACTOR=0.2 make
    - name: Test with pytest
      run: poetry run pytest
      env:
        DAFT_RUNNER: ray
