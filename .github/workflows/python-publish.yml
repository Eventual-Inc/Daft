name: daft-publish

on:
  push:
    tags:
      - v*
jobs:
  build_bdist_wheels:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ( ! endsWith(github.ref, 'dev0'))
    name: platform wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-11]
        python: ["cp38"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.9.0 poetry==1.2.0 twine && poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Build wheels
        run: python -m cibuildwheel --output-dir ./wheelhouse
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}_bdist_wheels
          path: ./wheelhouse/*.whl
      - name: Publish package
        run: python -m twine upload --skip-existing --disable-progress-bar ./wheelhouse/*
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

  build_sdist_wheels:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ( ! endsWith(github.ref, 'dev0'))
    name: source wheel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install poetry
        run: python -m pip install poetry==1.2.0 twine && poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Build wheels
        run: poetry build -f sdist
      - uses: actions/upload-artifact@v3
        with:
          name: source_wheels
          path: ./dist/*
      - name: Publish package
        run: python -m twine upload --skip-existing --disable-progress-bar ./dist/*
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
