name: daft-publish

on:
  schedule:
  #        ┌───────────── minute (0 - 59)
  #        │  ┌───────────── hour (0 - 23)
  #        │  │ ┌───────────── day of the month (1 - 31)
  #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  #        │  │ │ │ │
  - cron: 0 5 * * *

  push:
    tags:
    - v*
  workflow_dispatch:


jobs:
  build_bdist_wheels:
    name: platform wheels for ${{ matrix.python }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-11]
        python: [cp37, cp38, cp39, cp310]
    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ( ! endsWith(github.ref, 'dev0')) }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.9.0 poetry==1.2.0 twine && poetry self add "poetry-dynamic-versioning[plugin]"
    - name: Patch local toml with SemVar
      run: poetry dynamic-versioning
    - name: Build wheels
      run: python -m cibuildwheel --output-dir ./wheelhouse
      env:
        CIBW_BUILD: ${{ matrix.python }}-*
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.python }}-${{ matrix.os }}_bdist_wheels
        path: ./wheelhouse/*.whl
    - name: Publish bdist package to PYPI
      if: ${{ success() && (env.IS_PUSH == 'true') }}
      run: python -m twine upload --skip-existing --disable-progress-bar ./wheelhouse/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        # Really doesn't matter what version we upload with
        # just the version we test with
        python-version: '3.8'
        channels: conda-forge
        channel-priority: true
        mamba-version: '*'

    - name: Install anaconda client
      shell: bash -el {0}
      run: conda install -q -y anaconda-client

    - name: Upload wheels to anaconda nightly
      if: ${{ success() && (env.IS_SCHEDULE_DISPATCH == 'true' || env.IS_PUSH == 'true') }}
      shell: bash -el {0}
      env:
        DAFT_STAGING_UPLOAD_TOKEN: ${{ secrets.DAFT_STAGING_UPLOAD_TOKEN }}
        DAFT_NIGHTLY_UPLOAD_TOKEN: ${{ secrets.DAFT_NIGHTLY_UPLOAD_TOKEN }}
      run: |
        source ci/upload_wheels.sh
        set_upload_vars
        # trigger an upload to
        # https://anaconda.org/daft-nightly/getdaft
        # for cron jobs or "Run workflow" (restricted to main branch).
        # Tags will upload to
        # https://anaconda.org/daft/getdaft
        # The tokens were originally generated at anaconda.org
        upload_wheels

  build_sdist_wheels:
    name: source wheel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ( ! endsWith(github.ref, 'dev0')) }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install poetry
      run: python -m pip install poetry==1.2.0 twine && poetry self add "poetry-dynamic-versioning[plugin]"
    - name: Patch local toml with SemVar
      run: poetry dynamic-versioning
    - name: Build wheels
      run: poetry build -f sdist
    - uses: actions/upload-artifact@v3
      with:
        name: source_wheels
        path: ./dist/*
    - name: Publish sdist package to PYPI
      if: ${{ success() && (env.IS_PUSH == 'true') }}
      run: python -m twine upload --skip-existing --disable-progress-bar ./dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      # Used to push the built sdist
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        # Really doesn't matter what version we upload with
        # just the version we test with
        python-version: '3.8'
        channels: conda-forge
        channel-priority: true
        mamba-version: '*'

    - name: Install anaconda client
      shell: bash -el {0}
      run: conda install -q -y anaconda-client

    - name: Upload wheels to anaconda nightly
      if: ${{ success() && (env.IS_SCHEDULE_DISPATCH == 'true' || env.IS_PUSH == 'true') }}
      shell: bash -el {0}
      env:
        DAFT_STAGING_UPLOAD_TOKEN: ${{ secrets.DAFT_STAGING_UPLOAD_TOKEN }}
        DAFT_NIGHTLY_UPLOAD_TOKEN: ${{ secrets.DAFT_NIGHTLY_UPLOAD_TOKEN }}
      run: |
        source ci/upload_wheels.sh
        set_upload_vars
        # trigger an upload to
        # https://anaconda.org/daft-nightly/getdaft
        # for cron jobs or "Run workflow" (restricted to main branch).
        # Tags will upload to
        # https://anaconda.org/daft/getdaft
        # The tokens were originally generated at anaconda.org
        upload_wheels
