name: Build and publish package to PyPI

on:
  push:
    tags:
    - v*

env:
  PYTHON_VERSION: 3.11
  UV_SYSTEM_PYTHON: 1
  DAFT_ANALYTICS_ENABLED: '0'
  DAFT_PROGRESS_BAR: 0

defaults:
  run:
    shell: bash

jobs:
  build:
    name: 'Build Daft wheel for ${{ matrix.os }}-${{ matrix.arch }}-lts=${{ matrix.lts }}'
    uses: ./.github/workflows/build-wheel.yml
    with:
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      lts: ${{ matrix.lts }}
      build_type: release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        arch: [x86_64, aarch64]
        lts: [false, true]

        exclude:
        - os: windows
          arch: aarch64
        - lts: true
          arch: aarch64

  test-wheels:
    name: Test built wheels
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        runner: [native, ray]
        arch: [x86_64]
        python-version: ['3.9', '3.11']
    env:
      package-name: daft
    steps:
    - uses: actions/checkout@v4
    - name: Download built wheels
      uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Virtual Env
      run: |
        python -m venv venv
        echo "$GITHUB_WORKSPACE/venv/bin" >> $GITHUB_PATH
    - name: Install wheel and test dependencies
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 10
        command: |
          source venv/bin/activate
          pip install ray pytest pandas dist/*${{ matrix.arch }}*.whl --force-reinstall
          rm -rf daft
    - name: Run dataframe tests
      run: |
        source venv/bin/activate
        DAFT_RUNNER=${{ matrix.runner }} pytest tests/dataframe --durations=50

  publish:
    name: Publish wheels to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing. It is also tied to the name of the workflow file, so do not change the file name without changing the OIDC config.
    needs: test-wheels
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true

  on-failure:
    name: Send Slack notification on failure
    runs-on: ubuntu-latest
    needs: [build, test-wheels, publish]
    if: ${{ failure() }}

    steps:
    - uses: slackapi/slack-github-action@v2.0.0
      with:
        payload: |
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":rotating_light: Release: Uploading Wheels <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow> *FAILED* :rotating_light:"
                }
              }
            ]
          }
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
