{{- if .Values.distributed }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "daft.fullname" . }}-head
  labels:
    {{- include "daft.labels" . | nindent 4 }}
    app.kubernetes.io/component: head
    ray.io/node-type: head
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "daft.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: head
      ray.io/node-type: head
  template:
    metadata:
      labels:
        {{- include "daft.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: head
        ray.io/node-type: head
        ray.io/cluster: {{ include "daft.fullname" . }}
        ray.io/identifier: {{ include "daft.fullname" . }}-head
        ray.io/is-ray-node: "yes"
    spec:
      serviceAccountName: {{ include "daft.serviceAccountName" . }}
      containers:
      - name: ray-head
        image: "{{ .Values.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/bash", "-c", "--"]
        args:
        - |
          ulimit -n 65536;
          ray start --head --block \
            --dashboard-agent-listen-port=52365 \
            --dashboard-host=0.0.0.0 \
            --memory={{ include "daft.calculateRayMemory" .Values.head.resources.requests.memory }} \
            --metrics-export-port=8080 \
            --num-cpus=0 \
        env:
        - name: RAY_CLUSTER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['ray.io/cluster']
        - name: RAY_CLOUD_INSTANCE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RAY_NODE_TYPE_NAME
          value: "head"
        - name: RAY_PORT
          value: "6379"
        - name: RAY_ADDRESS
          value: "127.0.0.1:6379"
        - name: RAY_DASHBOARD_ENABLE_K8S_DISK_USAGE
          value: "1"
        {{- with .Values.head.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 6379
          name: gcs-server
          protocol: TCP
        - containerPort: 8265
          name: dashboard
          protocol: TCP
        - containerPort: 10001
          name: client
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - ray
            - health-check
          failureThreshold: 120
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - ray
            - health-check
          failureThreshold: 10
          initialDelaySeconds: 1
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 5
        {{- with .Values.head.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /dev/shm
          name: shm
        - mountPath: /tmp/ray
          name: ray-state
        {{- with .Values.head.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      - name: shm
        emptyDir:
          medium: Memory
      - name: ray-state
        emptyDir: {}
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.head.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.head.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.head.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
