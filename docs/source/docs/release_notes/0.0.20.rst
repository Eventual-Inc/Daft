Daft 0.0.20 Release Notes
=========================

The Daft 0.0.20 release adds many exciting new features and refactors. The highlights are:

* Dynamic Scheduling
* Rust Builds


New Features
------------

Dynamic Scheduling
^^^^^^^^^^^^^^^^^^

Great work by @xcharleslin to introduce a new Dynamic scheduler for running Daft dataframe queries. This version of the scheduler allows Daft to perform much more intelligent pull-based scheduling, dramatically speeding up operations such as `.limit(5).show()` which will now only require materializing the first partition, even in the presence of other global operations such as a `.where`.

* Add tests for \#368 `#375 <https://github.com/Eventual-Inc/Daft/pull/375>`_
* Implement dynamic scheduling. `#387 <https://github.com/Eventual-Inc/Daft/pull/387>`_
* Genericize PartitionT in DynamicSchedule components `#408 <https://github.com/Eventual-Inc/Daft/pull/408>`_

The Dynamic scheduler is under active development and will be the default scheduler in the next release. You may use the dynamic scheduler locally with the environment flag `DAFT_RUNNER=dynamic`.

See: `#204 <https://github.com/Eventual-Inc/Daft/pull/204>`_

Rust Builds
^^^^^^^^^^^

Foundational work by @sammysidhu to move Daft's internals to Rust. This release moves our current custom C++ kernels to Rust, already yielding some speedups in local benchmarking. More refactors to Rust are planned for the next release, providing increased type-safety and execution efficiency for Daft users.

* Move to Rust from C++ for internal compute `#385 <https://github.com/Eventual-Inc/Daft/pull/385>`_
* Move rust kernels to module `#389 <https://github.com/Eventual-Inc/Daft/pull/389>`_
* Rust Wheel Publishing to PYPI and Anaconda Nightly `#388 <https://github.com/Eventual-Inc/Daft/pull/388>`_
* build rust library for building docs `#391 <https://github.com/Eventual-Inc/Daft/pull/391>`_
* Drop Poetry for doc building `#390 <https://github.com/Eventual-Inc/Daft/pull/390>`_
* \[Rust wheel publish\] Set manylinux version to auto for max compatibility `#395 <https://github.com/Eventual-Inc/Daft/pull/395>`_
* Add daft version from rust build `#397 <https://github.com/Eventual-Inc/Daft/pull/397>`_
* Fix build for Ray compatibility CI `#402 <https://github.com/Eventual-Inc/Daft/pull/402>`_
* Clean up Ray compatiblity CI jobs Ray and Protobuf installations `#407 <https://github.com/Eventual-Inc/Daft/pull/407>`_

Enhancements
------------

* Add `memory_bytes` to `ResourceRequest` and pass into Ray. `#368 <https://github.com/Eventual-Inc/Daft/pull/368>`_
* Move evaluation of UDF expression to ExpressionExecutor `#380 <https://github.com/Eventual-Inc/Daft/pull/380>`_
* Refactors to isolate code that uses PyArrow into vPartition `#383 <https://github.com/Eventual-Inc/Daft/pull/383>`_
* move RayPartitionSet import out of DataFrame top level and into ray\_dataset\_conversion `#392 <https://github.com/Eventual-Inc/Daft/pull/392>`_
* Fix retrieval of daft version in benchmarking suite `#396 <https://github.com/Eventual-Inc/Daft/pull/396>`_
* File read refactors `#400 <https://github.com/Eventual-Inc/Daft/pull/400>`_
* Remove caching from filesystems and benchmarking `#411 <https://github.com/Eventual-Inc/Daft/pull/411>`_


Bug Fixes
---------

* Pin numpy \< 1.24 to avoid partition bug for pylist `#399 <https://github.com/Eventual-Inc/Daft/pull/399>`_


Build Changes
-------------

* Add ray\[default\] to dev dependencies. `#369 <https://github.com/Eventual-Inc/Daft/pull/369>`_
* Add psutil as daft dep `#376 <https://github.com/Eventual-Inc/Daft/pull/376>`_
* Remove Pillow as an \(optional\) dependency `#379 <https://github.com/Eventual-Inc/Daft/pull/379>`_
* Clean up Polars imports to eventually be optional dependency `#386 <https://github.com/Eventual-Inc/Daft/pull/386>`_
* drop boto from aws extras;  `#394 <https://github.com/Eventual-Inc/Daft/pull/394>`_
* Add CI step to test imports without optional deps `#393 <https://github.com/Eventual-Inc/Daft/pull/393>`_


Documentation
-------------

* Install nightly version of daft in notebooks `#365 <https://github.com/Eventual-Inc/Daft/pull/365>`_
* Demo notebook for top N most red images `#363 <https://github.com/Eventual-Inc/Daft/pull/363>`_
