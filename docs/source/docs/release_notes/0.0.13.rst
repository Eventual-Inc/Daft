Daft 0.0.13 Release Notes
=========================

The Daft 0.0.13 release fixes some issues with typing and adds new functionality for loading from files on disk. The highlights are:

* Improved unified API + User documentation published on www.getdaft.io
* Adds support for multi-column ``DataFrame.sort``
* Adds ``DataFrame.explode`` which explodes a Python column of iterable objects into multiple rows
* Adds ``DataFrame.from_files`` which loads a DataFrame of filepaths and file metadata


New Features
------------

Polars UDFs
^^^^^^^^^^^

``@polars_udf`` added which works similarly to ``@udf``, but provides function inputs as a Polars Series instead of Numpy array. Polars Series is a more efficient format to cast our underlying Arrow data representation and handles NaN vs Null semantics correctly.


See: `#204 <https://github.com/Eventual-Inc/Daft/pull/204>`_

DataFrame Explodes
^^^^^^^^^^^^^^^^^^

``DataFrame.explode`` explodes a Python column of iterable objects into multiple rows.

See: `#225 <https://github.com/Eventual-Inc/Daft/pull/225>`_

DataFrame creation from files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

``DataFrame.from_files`` loads a DataFrame of filepaths and file metadata.

See: `#220 <https://github.com/Eventual-Inc/Daft/pull/220>`_

Multi-column Sorts
^^^^^^^^^^^^^^^^^^

``DataFrame.sort`` can now run on multiple columns.

See: `Multi-column DataFrame sorting #212 <https://github.com/Eventual-Inc/Daft/pull/212>`_

Enhancements
------------

* Refactor ExpressionTypes in daft.execution.operators to daft.types module `#231 <https://github.com/Eventual-Inc/Daft/pull/231>`_
* Allow .with\_column to override an existing column name `#226 <https://github.com/Eventual-Inc/Daft/pull/226>`_
* Fixes DataFrame.write\_\* to be blocking calls `#215 <https://github.com/Eventual-Inc/Daft/pull/215>`_
* Refactor HTML repr code for prettier colab display `#205 <https://github.com/Eventual-Inc/Daft/pull/205>`_

Bug Fixes
---------

* Arrow Negative Slice Bug Fix `#229 <https://github.com/Eventual-Inc/Daft/pull/229>`_
* Fix ExpressionExecutor eval's dispatching of OperatorEvaluator `#227 <https://github.com/Eventual-Inc/Daft/pull/227>`_
* Fix bug in search sorted when table is empty and has no chunks `#224 <https://github.com/Eventual-Inc/Daft/pull/224>`_
* Fix random spaces appearing in long strings in tables `#210 <https://github.com/Eventual-Inc/Daft/pull/210>`_
* Allow RayRunner to proceed when Ray context has already been initialized `#203 <https://github.com/Eventual-Inc/Daft/pull/203>`_
* Refactor UDFs to create properly typed Blocks `#232 <https://github.com/Eventual-Inc/Daft/pull/232>`_

Build Changes
-------------

* Downgrade minimum Arrow version to 6.0 `#222 <https://github.com/Eventual-Inc/Daft/pull/222>`_
* MacOS build bug when multiprocessing method is set to spawn `#207 <https://github.com/Eventual-Inc/Daft/pull/207>`_


Closed Issues
-------------

* Downgrade pyarrow for compatibility with Ray Data `#221 <https://github.com/Eventual-Inc/Daft/issues/221>`_
* Read files from storage with DataFrame.from\_files `#214 <https://github.com/Eventual-Inc/Daft/issues/214>`_
* DataFrame.explode for splatting sequences of data into rows `#208 <https://github.com/Eventual-Inc/Daft/issues/208>`_
* Use Polars as the user-interface for UDFs `#200 <https://github.com/Eventual-Inc/Daft/issues/200>`_
* Sphinx Documentation on GitHub Pages `#186 <https://github.com/Eventual-Inc/Daft/issues/186>`_
* Selection and configuration of backend (PyRunner vs RayRunner) `#178 <https://github.com/Eventual-Inc/Daft/issues/178>`_
