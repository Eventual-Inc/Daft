ARG PYTHON_VERSION
ARG TARGETPLATFORM=linux/amd64

FROM --platform=${TARGETPLATFORM} continuumio/miniconda3:4.12.0 AS conda_env

ARG PYTHON_VERSION
ARG TARGETPLATFORM
ARG CONDA_ENV_PATH=conda_environment.yml
ARG VENV_PATH=/opt/venv
ARG CONDA_PACK_OUTPUT_PATH=/opt/conda_pack_env.tar.gz
ARG ENDPOINT_PKL_FILENAME=endpoint.pkl
ARG ENTRYPOINT_FILE_NAME=entrypoint.py

COPY $CONDA_ENV_PATH $CONDA_ENV_PATH
RUN conda env create --prefix $VENV_PATH -f $CONDA_ENV_PATH --no-default-packages --quiet

RUN conda install conda-pack
RUN conda pack --prefix $VENV_PATH -o $CONDA_PACK_OUTPUT_PATH --quiet

FROM --platform=${TARGETPLATFORM} public.ecr.aws/lambda/python:${PYTHON_VERSION} AS unpack_conda

ARG VENV_PATH

RUN yum install -y tar gzip
COPY --from=conda_env $CONDA_PACK_OUTPUT_PATH $CONDA_PACK_OUTPUT_PATH

RUN mkdir $VENV_PATH
RUN tar -xzf $CONDA_PACK_OUTPUT_PATH -C $VENV_PATH

FROM --platform=${TARGETPLATFORM} public.ecr.aws/lambda/python:${PYTHON_VERSION} AS serving

COPY --from=unpack_conda $VENV_PATH $VENV_PATH
ENV ENDPOINT_PKL_FILEPATH ${LAMBDA_TASK_ROOT}/$ENDPOINT_PKL_FILENAME
COPY $ENDPOINT_PKL_FILENAME ${LAMBDA_TASK_ROOT}
COPY $ENTRYPOINT_FILE_NAME ${LAMBDA_TASK_ROOT}

ENTRYPOINT ["/lambda-entrypoint.sh"]
# ENTRYPOINT ["VENV_PATH", "&&", "/lambda-entrypoint.sh"]
CMD ["entrypoint:lambda_handler"]
